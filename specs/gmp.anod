from e3.os.fs import cd, unixpath
from e3.anod.helper import Configure, Make
from e3.anod.spec import Anod
from e3.anod.loader import spec


class GMP(spec("gnu")):
    @property
    def version(self):
        return "6.3.0"

    @property
    def tarball(self):
        return "gmp-%s.tar.bz2" % self.version

    @property
    def source_pkg_build(self):
        return [
            self.HTTPSSourceBuilder(
                name=self.tarball, url="https://ftp.gnu.org/gnu/gmp/" + self.tarball
            )
        ]

    @property
    def build_source_list(self):
        return [Anod.Source(name=self.tarball, publish=True, dest="")]

    @property
    def build_space_name(self):
        if "shared_lib" in self.parsed_qualifier:
            return "%s-shared" % (self.name)
        else:
            return self.name

    @property
    def build_deps(self):
        return self.compiler_deps()

    def pre_build(self):
        if self.env.host.os.name == "darwin" and self.env.host.cpu.name == "x86_64":
            # Regenerate configure to avoid flat namespace linking
            # Reported by email: https://gmplib.org/list-archives/gmp-bugs/2023-July/thread.html
            # Remove in next version
            cd(self["SRC_DIR"])
            self.shell("autoreconf", "-i", "-s")

    def setup(self):
        configure = Configure(self)
        configure.add("--prefix=%s" % unixpath(self["INSTALL_DIR"]))
        if "shared_lib" in self.parsed_qualifier:
            configure.add("--enable-shared")
            configure.add("--disable-static")
        else:
            configure.add("--disable-shared")
            configure.add("--enable-static")
        configure.add("--enable-cxx")

        if self.env.host.os.name == "darwin":
            # Enable --with-pic to avoid linking issues with the static library
            # https://github.com/Homebrew/homebrew-core/blob/98064198c7e5464124f53bbdb47bec3e03f1a0cd/Formula/gmp.rb#L28
            configure.add("--with-pic")

        if self.env.host.os.name == "windows":
            configure.add("CFLAGS=-std=gnu17")  # fix for new defaults in gcc 15.1.0

        make = Make(self)

        return {"configure": configure, "make": make}
