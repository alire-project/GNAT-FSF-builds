from e3.os.fs import unixpath
from e3.anod.helper import Configure, Make
from e3.anod.spec import Anod
from e3.anod.loader import spec

import os


class LibIconv(spec("common")):
    @property
    def version(self):
        return "1.18"

    @property
    def tarball(self):
        return "libiconv-%s.tar.gz" % self.version

    @property
    def source_pkg_build(self):
        return [
            self.HTTPSSourceBuilder(
                name=self.tarball,
                url="https://ftp.gnu.org/gnu/libiconv/%s" % self.tarball,
            )
        ]

    @property
    def build_source_list(self):
        return [Anod.Source(name=self.tarball, publish=True, dest="")]

    @property
    def build_deps(self):
        return [Anod.Dependency("base_gcc")]

    def setenv(self):
        self.env.add_search_path(
            "C_INCLUDE_PATH", os.path.join(self["INSTALL_DIR"], "include")
        )
        self.env.add_search_path(
            "LIBRARY_PATH", os.path.join(self["INSTALL_DIR"], "lib")
        )

    @Anod.primitive()
    def build(self):
        for m in self.deps:
            self.deps[m].setenv()

        configure = Configure(self)
        configure.add("--prefix=%s" % unixpath(self["INSTALL_DIR"]))
        configure.add("--enable-static=yes")
        configure.add("--enable-shared=no")
        configure.add("--enable-extra-encodings")
        configure.add("--disable-rpath")
        configure.add("--enable-silent-rules")
        configure()

        make = Make(self)
        make()
        make("install", jobs=1)

        self.clean()
