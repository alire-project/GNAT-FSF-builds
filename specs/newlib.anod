from e3.os.fs import unixpath
from e3.anod.helper import Configure, Make
from e3.anod.spec import Anod
from e3.anod.loader import spec


class Newlib(spec("common")):
    @property
    def version(self):
        return "4.3.0.20230120"

    @property
    def tarball(self):
        return "newlib-%s.tar.gz" % self.version

    @property
    def source_pkg_build(self):
        return [
            self.HTTPSSourceBuilder(
                name=self.tarball,
                url="https://sourceware.org/pub/newlib/" + self.tarball,
            )
        ]

    @property
    def build_source_list(self):
        return [Anod.Source(name=self.tarball, publish=True, dest="")]

    @property
    def build_deps(self):
        deps = [Anod.Dependency("binutils")]

        if self.env.is_canadian:
            deps.append(
                Anod.Dependency(
                    "gcc", qualifier="bootstrap", host="build", target="target"
                )
            )
        else:
            deps.append(Anod.Dependency("gcc", qualifier="bootstrap"))

        return deps

    @Anod.primitive()
    def build(self):
        self.deps["gcc"].setenv()

        configure = Configure(self)
        configure.add("--prefix=%s" % unixpath(self["INSTALL_DIR"]))

        configure.add(
            "--enable-newlib-io-long-long",
            "--enable-newlib-io-c99-formats",
            "--enable-newlib-register-fini",
            "--enable-newlib-retargetable-locking",
            "--disable-newlib-supplied-syscalls",
            "--disable-nls",
        )

        # configure.add("CFLAGS_FOR_TARGET=%s" % cflags)

        configure()

        make = Make(self)
        make()
        make("install-target-newlib")

        self.clean()
