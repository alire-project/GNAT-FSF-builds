name: GNAT Linux
on:
  #schedule:
  #  - cron:  '0 0 * * *'
  #push:
  pull_request:


jobs:

  why3:
    strategy:
      matrix:
        ocaml-compiler:
          - 4.11.2

    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: 'adacore/why3'
          ref: 'fsf'

      - name: Use Setup OCaml {{ matrix.ocaml-version }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - name: Setup Packages
        run: |
          opam depext zarith re seq why3
          opam install dune dune-configurator menhir num ocamlgraph re seq yojson zarith sexplib ppx_sexp_conv ppx_deriving

      - run: opam exec -- ./configure --prefix=/tmp/why3install --enable-relocation --disable-emacs-compilation --disable-hypothesis-selection --disable-js-of-ocaml --disable-zip

      - run: opam exec -- make

      - run: opam exec -- make install_spark2014

      - run: git log --format="%H" -n 1 > /tmp/why3install/why3-version.txt

      - name: Upload the build artifact
        uses: actions/upload-artifact@v2
        with:
          name: why3
          path: /tmp/why3install


  alt_ergo:
    strategy:
      matrix:
        ocaml-compiler:
          - "4.11.2"
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: 'adacore/alt-ergo'
          ref: 'fsf'

      - name: Use Setup OCaml {{ matrix.ocaml-version }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}

      - run: opam install alt-ergo --destdir=/tmp/alt-ergo-install

      - run: git log --format="%H" -n 1 > /tmp/alt-ergo-install/alt-ergo-version.txt

      - name: Upload the build artifact
        uses: actions/upload-artifact@v2
        with:
          name: alt-ergo
          path: /tmp/alt-ergo-install


  spark:
    name: spark
    needs: [why3, alt_ergo]
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Project
      uses: actions/checkout@v2

    - uses: actions/download-artifact@v2
      with:
        name: alt-ergo
        path: alt-ergo_artifact/

    - uses: actions/download-artifact@v2
      with:
        name: why3
        path: why3_artifact/

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install e3-core==22.1.0

    - name: Build SPARK
      run: ./anod build spark2014 -v --loglevel DEBUG --enable-cleanup

    - name: Package GNATprove
      run: ./anod build release_package --qualifier=package=gnatprove,do_gh_release -v --loglevel DEBUG
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # for GitHub CLI tool

    - uses: actions/upload-artifact@v2
      with:
        name: release-packages
        path: sbx/*/release_package*/install/*
        retention-days: 5
