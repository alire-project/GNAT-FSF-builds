name: GNAT Linux
on:
  #schedule:
  #  - cron:  '0 0 * * *'
  #push:
  pull_request:


jobs:
  gnat:
    name: GNAT Linux
    runs-on: ubuntu-22.04-arm # ubuntu-20.04
    steps:
    - name: Checkout Project
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.8

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install e3-core==22.1.0

    - name: Install Ada dependencies
      run: sudo apt-get install gnat bison texinfo

    - name: Build fake bootstrap compiler
      run: |
        mkdir -p gnat-debian-stub/bin/
        cat > gnat-debian-stub/bin/gcc <<EOF
        #/bin/bash
        /usr/bin/gnatgcc "\$@"
        EOF
        chmod +x gnat-debian-stub/bin/gcc
        tar cavf /tmp/gnat-aarch64-linux-14.2.0-0.tar.gz gnat-debian-stub

    - name: Build GNAT native
      run: ./anod build gcc -v --loglevel DEBUG --enable-cleanup

    - name: Build GDB
      run: ./anod build gdb -v --loglevel DEBUG --enable-cleanup

    - name: Package GNAT
      run: ./anod build release_package --qualifier=package=gnat -v --loglevel DEBUG
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # for GitHub CLI tool

    - uses: actions/upload-artifact@v4
      with:
        name: anod-artifacts
        path: out_artifacts/*
        retention-days: 1

    - uses: actions/upload-artifact@v4
      with:
        name: release-packages
        path: sbx/*/release_package*/install/*
        retention-days: 5



  gprbuild_gnatcov:
    name: GPRbuild and GNATcov
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Project
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.8

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install e3-core==22.1.0

    - name: Build GPRbuild
      run: ./anod build gprbuild -v --loglevel DEBUG --enable-cleanup

    - name: Package GPRbuild
      run: ./anod build release_package --qualifier=package=gprbuild -v --loglevel DEBUG
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # for GitHub CLI tool

    - uses: actions/upload-artifact@v4
      with:
        name: release-packages
        path: sbx/*/release_package*/install/*
        retention-days: 5
