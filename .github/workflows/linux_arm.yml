name: GNAT Linux Arm
'on':
  pull_request:
    paths-ignore:
    - generate/**
    - utils/**
    - LICENSE
    - README.md
    - .gitignore
  workflow_dispatch:
    inputs:
      do_gh_release:
        description: Set to true to publish results in a GitHub release
        type: boolean
        required: false
        default: false
jobs:
  gcc_dependencies:
    name: GCC Dependencies Linux_Arm
    runs-on: ubuntu-22.04-arm
    steps:
    - name: Checkout Project
      uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install Python dependencies
      run: |-
        python3 -m pip install --upgrade pip
        pip install --break-system-packages e3-core==22.1.0
    - name: Build GMP
      run: python3 ./anod build gmp -v --loglevel DEBUG --enable-cleanup
    - name: Build MPFR
      run: python3 ./anod build mpfr -v --loglevel DEBUG --enable-cleanup
    - name: Build MPC
      run: python3 ./anod build mpc -v --loglevel DEBUG --enable-cleanup
    - name: Build ISL
      run: python3 ./anod build isl -v --loglevel DEBUG --enable-cleanup
    - name: Upload artifact 'gcc-dependencies-artifacts'
      uses: actions/upload-artifact@v4
      with:
        name: gcc-dependencies-artifacts
        path: out_artifacts/*
        retention-days: 1
  gnat:
    needs:
    - gcc_dependencies
    name: GNAT Linux_Arm
    runs-on: ubuntu-22.04-arm
    steps:
    - name: Checkout Project
      uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install Python dependencies
      run: |-
        python3 -m pip install --upgrade pip
        pip install --break-system-packages e3-core==22.1.0
    - name: Download artifact 'gcc-dependencies-artifacts'
      uses: actions/download-artifact@v4
      with:
        name: gcc-dependencies-artifacts
        path: in_artifacts/
    - name: Build GNAT native
      run: python3 ./anod build gcc -v --loglevel DEBUG --enable-cleanup
    - name: Build GDB
      run: python3 ./anod build gdb -v --loglevel DEBUG --enable-cleanup
    - name: Package GNAT
      run: python3 ./anod build release_package --qualifier=package=gnat -v --loglevel DEBUG
    - if: inputs.do_gh_release
      name: Release GNAT
      run: python3 ./anod build release_github --qualifier=package=gnat -v --loglevel DEBUG --enable-cleanup
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload artifact 'gnat-release-packages'
      uses: actions/upload-artifact@v4
      with:
        name: gnat-release-packages
        path: sbx/*/release_package*/install/*
        retention-days: 5
  gprbuild:
    name: GPRbuild Linux_Arm
    runs-on: ubuntu-22.04-arm
    steps:
    - name: Checkout Project
      uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install Python dependencies
      run: |-
        python3 -m pip install --upgrade pip
        pip install --break-system-packages e3-core==22.1.0
    - name: Build GPRbuild
      run: python3 ./anod build gprbuild -v --loglevel DEBUG --enable-cleanup
    - name: Package GPRbuild
      run: python3 ./anod build release_package --qualifier=package=gprbuild -v --loglevel DEBUG
    - if: inputs.do_gh_release
      name: Release GPRbuild
      run: python3 ./anod build release_github --qualifier=package=gprbuild -v --loglevel DEBUG --enable-cleanup
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload artifact 'gprbuild-release-packages'
      uses: actions/upload-artifact@v4
      with:
        name: gprbuild-release-packages
        path: sbx/*/release_package*/install/*
        retention-days: 5
  gnat_cross:
    strategy:
      fail-fast: false
      matrix:
        target:
        - arm-elf
        - riscv64-elf
        - avr-elf
        - xtensa-esp32-elf
    needs:
    - gcc_dependencies
    name: GNAT ${{ matrix.target }} Linux_Arm
    runs-on: ubuntu-22.04-arm
    steps:
    - name: Checkout Project
      uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install Python dependencies
      run: |-
        python3 -m pip install --upgrade pip
        pip install --break-system-packages e3-core==22.1.0
    - name: Download artifact 'gcc-dependencies-artifacts'
      uses: actions/download-artifact@v4
      with:
        name: gcc-dependencies-artifacts
        path: in_artifacts/
    - name: Build GNAT ${{ matrix.target }}
      run: python3 ./anod build gcc --target=${{ matrix.target }} -v --loglevel DEBUG --enable-cleanup
    - name: Build GDB ${{ matrix.target }}
      run: python3 ./anod build gdb --target=${{ matrix.target}} -v --loglevel DEBUG --enable-cleanup
    - name: Package GNAT ${{ matrix.target }}
      run: python3 ./anod build release_package --qualifier=package=gnat --target=${{ matrix.target }} -v --loglevel DEBUG
    - if: inputs.do_gh_release
      name: Release GNAT ${{ matrix.target }}
      run: python3 ./anod build release_github --qualifier=package=gnat --target=${{ matrix.target }} -v --loglevel DEBUG --enable-cleanup
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload artifact 'gnat-release-packages-${{matrix.target}}'
      uses: actions/upload-artifact@v4
      with:
        name: gnat-release-packages-${{matrix.target}}
        path: sbx/*/release_package*/install/*
  spark:
    name: SPARK Linux_Arm
    runs-on: ubuntu-22.04-arm
    steps:
    - name: Checkout Project
      uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install Python dependencies
      run: |-
        python3 -m pip install --upgrade pip
        pip install --break-system-packages e3-core==22.1.0
    - name: Build SPARK
      run: python3 ./anod build spark2014 -v --loglevel DEBUG --enable-cleanup
    - name: Package GNATprove
      run: python3 ./anod build release_package --qualifier=package=gnatprove -v --loglevel DEBUG
    - if: inputs.do_gh_release
      name: Release GNATprove
      run: python3 ./anod build release_github --qualifier=package=gnatprove -v --loglevel DEBUG --enable-cleanup
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Upload artifact 'gnatprove-release-packages'
      uses: actions/upload-artifact@v4
      with:
        name: gnatprove-release-packages
        path: sbx/*/release_package*/install/*
        retention-days: 5
