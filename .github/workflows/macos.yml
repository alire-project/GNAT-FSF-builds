name: macOS
on:
  #schedule:
  #  - cron:  '0 0 * * *'
  #push:
  pull_request:


jobs:
  gnat_gprbuild:
    name: GNAT macOS and GPRbuild
    runs-on: macos-11
    steps:
    - name: Checkout Project
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install e3-core==22.1.0

    - name: Build GNAT native
      run: ./anod build gcc -v --loglevel DEBUG --enable-cleanup

    - name: Build GDB
      run: ./anod build gdb -v --loglevel DEBUG --enable-cleanup

    - name: Package GNAT
      run: ./anod build release_package --qualifier=package=gnat,do_gh_release -v --loglevel DEBUG
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # for GitHub CLI tool

    - name: Build GPRbuild
      run: ./anod build gprbuild -v --loglevel DEBUG --enable-cleanup

    - name: Package GPRbuild
      run: ./anod build release_package --qualifier=package=gprbuild,do_gh_release -v --loglevel DEBUG
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # for GitHub CLI tool

    - uses: actions/upload-artifact@v2
      with:
        name: anod-artifacts
        path: out_artifacts/*
        retention-days: 1

    - uses: actions/upload-artifact@v2
      with:
        name: release-packages
        path: sbx/*/release_package*/install/*
        retention-days: 5



  gnatcov:
    name: GNATcov
    needs: gnat_gprbuild
    runs-on: macos-11
    steps:
    - name: Checkout Project
      uses: actions/checkout@v2

    - uses: actions/download-artifact@v2
      with:
        name: anod-artifacts
        path: in_artifacts/

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install e3-core==22.1.0

    - name: Build GNATcov
      run: ./anod build gnatcov -v --loglevel DEBUG --enable-cleanup

    - name: Package GNATcov
      run: ./anod build release_package --qualifier=package=gnatcov,do_gh_release -v --loglevel DEBUG
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # for GitHub CLI tool

    - uses: actions/upload-artifact@v2
      with:
        name: release-packages
        path: sbx/*/release_package*/install/*
        retention-days: 5



  gnat_cross:
    strategy:
      matrix:
        target: ["arm-elf", "riscv64-elf", "avr-elf"]
    name: GNAT ${{ matrix.target }}-darwin
    needs: gnat_gprbuild
    runs-on: macos-11
    steps:
    - name: Checkout Project
      uses: actions/checkout@v2

    - uses: actions/download-artifact@v2
      with:
        name: anod-artifacts
        path: in_artifacts/

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install e3-core==22.1.0

    - name: Build GNAT ${{ matrix.target }}
      run: ./anod build gcc -v --loglevel DEBUG --target=${{ matrix.target }} --enable-cleanup

    - name: Build GDB ${{ matrix.target }}
      run: ./anod build gdb -v --loglevel DEBUG --target=${{ matrix.target }} --enable-cleanup

    - name: Package GNAT ${{ matrix.target }}
      run: ./anod build release_package --qualifier=package=gnat,do_gh_release --target=${{ matrix.target }} -v --loglevel DEBUG
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # for GitHub CLI tool

    - uses: actions/upload-artifact@v2
      with:
        name: release-packages
        path: sbx/*/release_package*/install/*
        retention-days: 5


  why3:
    strategy:
      matrix:
        ocaml-version:
          - 4.11.2
    runs-on: macos-11
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: 'adacore/why3'
          ref: 'fsf-13'

      - name: Use Setup OCaml {{ matrix.ocaml-version }}
        uses: ocaml/setup-ocaml@v1.1.11
        with:
          ocaml-version: ${{ matrix.ocaml-version }}

      - name: opam install depext
        run: opam depext camlzip zarith re seq why3

      - run: opam install camlzip dune dune-configurator menhir num ocamlgraph re seq yojson zarith

      - run: opam exec -- bash configure --prefix=/tmp/why3install --enable-relocation --disable-emacs-compilation --disable-hypothesis-selection --disable-js-of-ocaml
      - run: opam exec -- make
      - run: opam exec -- make install_spark2014

      - run: git log --format="%H" -n 1 > /tmp/why3install/why3-version.txt

      - name: Upload the build artifact
        uses: actions/upload-artifact@v2
        with:
          name: why3
          path: /tmp/why3install


  alt_ergo:
    env:
        OPAMYES: true
        OCAML_DEFAULT_VERSION: 4.10.0
    strategy:
      matrix:
        ocaml-version:
          - 4.10.0
    runs-on: macos-11
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          repository: 'adacore/alt-ergo'
          ref: 'master'

      - name: Use Setup OCaml {{ matrix.ocaml-version }}
        uses: ocaml/setup-ocaml@v1.1.11
        with:
          ocaml-version: ${{ matrix.ocaml-version }}

      - run: opam pin alt-ergo . -y

      - run: opam install alt-ergo --destdir=/tmp/alt-ergo-install

      - run: git log --format="%H" -n 1 > /tmp/alt-ergo-install/alt-ergo-version.txt

      - name: Upload the build artifact
        uses: actions/upload-artifact@v2
        with:
          name: alt-ergo
          path: /tmp/alt-ergo-install



  spark:
    name: SPARK
    needs: [gnat_gprbuild, why3, alt_ergo]
    runs-on: macos-11
    steps:
    - name: Checkout Project
      uses: actions/checkout@v2

    - uses: actions/download-artifact@v2
      with:
        name: anod-artifacts
        path: in_artifacts/

    - uses: actions/download-artifact@v2
      with:
        name: alt-ergo
        path: alt-ergo_artifact/

    - uses: actions/download-artifact@v2
      with:
        name: why3
        path: why3_artifact/

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install e3-core==22.1.0

    - name: Build SPARK
      run: ./anod build spark2014 -v --loglevel DEBUG --enable-cleanup

    - name: Package GNATprove
      run: ./anod build release_package --qualifier=package=gnatprove,do_gh_release -v --loglevel DEBUG
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # for GitHub CLI tool

    - uses: actions/upload-artifact@v2
      with:
        name: release-packages
        path: sbx/*/release_package*/install/*
        retention-days: 5




  sanity_checking:
    name: Sanity Checking
    needs: [gnat_gprbuild, gnatcov, spark]
    runs-on: macos-11
    steps:
    - name: Checkout Project
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install e3-testsuite

    - uses: actions/download-artifact@v2
      with:
        name: release-packages
        path: ./sanity-checking/release_packages

    - name: Run testsuite
      run: |
          cd ./sanity-checking
          python3 ./run.py -v --install-deps-from=release_packages --pkgs-install-dir=pkgs_install --failure-exit-code 1

    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: testsuite-results-${{runner.os}}
        path: sanity-checking/out/new
        retention-days: 5
